// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AttributeGraph
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AttributeGraph
import Foundation
import Swift
import _Concurrency
import _StringProcessing

// MARK: - Attribute Related

// MARK: - AGAttribute

extension AGAttribute: Swift.CustomStringConvertible {
	public var description: Swift.String { get }
}

// MARK: - Attribute

@frozen @propertyWrapper @dynamicMemberLookup public struct Attribute<Value>: Swift.Hashable, Swift.Equatable, Swift.CustomStringConvertible {
    public var identifier: AttributeGraph.AGAttribute
    public var wrappedValue: Value {
        get
        set
    }
  
    @inlinable public init(identifier: AttributeGraph.AGAttribute) {
        self.identifier = identifier
    }
  
    @inlinable public init(_ attribute: AttributeGraph.Attribute<Value>) {
        self = attribute
    }
  
    public subscript<Member>(dynamicMember _: Swift.KeyPath<Value, Member>) -> AttributeGraph.Attribute<Member> {
        get
    }

    public subscript<Member>(_: Swift.KeyPath<Value, Member>) -> AttributeGraph.Attribute<Member> {
        get
    }
  
    public var description: Swift.String {
        get
    }

    public static func == (lhs: AttributeGraph.Attribute<Value>, rhs: AttributeGraph.Attribute<Value>) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int { get }
    public var value: Value { get set }
}

// MARK: - _AttributeBody

public protocol _AttributeBody {
    static func _destroySelf(_ value: Swift.UnsafeMutableRawPointer)
    static var _hasDestroySelf: Swift.Bool { get }
    static func _updateDefault(_ value: Swift.UnsafeMutableRawPointer)
    static var comparisonMode: AGComparisonMode { get }
    static var flags: AGAttributeTypeFlags { get }
}

extension AttributeGraph._AttributeBody {
    public static func _destroySelf(_ value: Swift.UnsafeMutableRawPointer)
    public static var _hasDestroySelf: Swift.Bool { get }
    public static func _updateDefault(_ value: Swift.UnsafeMutableRawPointer)
    public static var comparisonMode: AGComparisonMode { get }
    public static var flags: AGAttributeTypeFlags { get }
}

// MARK: - AttributeBodyVisitor

public protocol AttributeBodyVisitor {
    func visit<Body: AttributeGraph._AttributeBody>(body: Swift.UnsafePointer<Body>)
}

// MARK: - External

public struct External<Value>: AttributeGraph._AttributeBody, Swift.CustomStringConvertible {
	public init()
	public var description: Swift.String { get }
	public static var comparisonMode: AGComparisonMode { get }
	public static var flags: AGAttributeTypeFlags { get }
	public static func _update(_: Swift.UnsafeMutableRawPointer, attribute: AGAttribute)
}

// MARK: - Focus

public struct Focus<Root, Value>: AttributeGraph.Rule, Swift.CustomStringConvertible {
    public var root: Attribute<Root>
    public var keyPath: KeyPath<Root, Value>
    
    public init(root: Attribute<Root>, keyPath: KeyPath<Root, Value>)
    public var description: Swift.String { get }
    public var value: Self.Value { get }
    public static var flags: AGAttributeTypeFlags { get }
}

// MARK: - Rule Related

// MARK: - Rule

public protocol Rule: AttributeGraph._AttributeBody {
    associatedtype Value
    static var initialValue: Self.Value? { get }
    var value: Self.Value { get }
}

extension AttributeGraph.Rule {
    public static var initialValue: Self.Value? {
        get
    }
}

// MARK: - Runtime Related

// MARK: - CompareValues

public func compareValues<A>(_ lhs: A, _ rhs: A, mode: AGComparisonMode = ._3) -> Swift.Bool
public func compareValues<A>(_ lhs: A, _ rhs: A, options: AGComparisonOptions) -> Swift.Bool

// MARK: - AGTypeID

extension AGTypeID: Swift.CustomStringConvertible {
    public init(_ type: Any.Type)
    public var type: Any.Type { get }
    public var description: String { get }
    public func forEachField(
        options: AGTypeApplyOptions,
        do body: (UnsafePointer<Int8>, Int, Any.Type) -> Bool
    ) -> Bool
}

// MARK: - AGTupleType

extension AGTupleType {
    public init(_ type: [Any.Type])
    public init(_ type: Any.Type)
    public var type: Any.Type { get }
    public var isEmpty: Swift.Bool { get }
    public var indices: Swift.Range<Swift.Int> { get }
    public func type(at index: Swift.Int) -> Any.Type
}

// MARK: - AGTypeApplyEnumData

@discardableResult
public func withUnsafePointerToEnumCase<T>(
    of value: Swift.UnsafeMutablePointer<T>,
    do body: (Swift.Int, Any.Type, Swift.UnsafeRawPointer) -> Void
) -> Swift.Bool

@discardableResult
public func withUnsafeMutablePointerToEnumCase<T>(
    of value: UnsafeMutablePointer<T>,
    do body: (Swift.Int, Any.Type, Swift.UnsafeMutableRawPointer) -> Void
) -> Swift.Bool

// MARK: - AGTypeApplyFields

@_silgen_name("AGTypeApplyFields")
public func AGTypeApplyFields(
    _ type: Any.Type,
    body: (UnsafePointer<Int8>, Int, Any.Type) -> Void
)

@_silgen_name("AGTypeApplyFields2")
public func AGTypeApplyFields2(
    _ type: Any.Type,
    options: AGTypeApplyOptions,
    body: (UnsafePointer<Int8>, Int, Any.Type) -> Bool
) -> Bool

// MARK: - AGGraph C functions

@_silgen_name("AGGraphArchiveJSON")
@inline(__always)
public func graphArchiveJSON(_ name: UnsafePointer<Int8>)

@_silgen_name("AGGraphDescription")
@inline(__always)
public func graphDescription(_ graph: AGGraph? = nil, options: CFDictionary) -> UnsafeRawPointer?
