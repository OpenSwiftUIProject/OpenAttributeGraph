// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AttributeGraph
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AttributeGraph
import Foundation
import Swift
import _Concurrency
import _StringProcessing
@frozen @propertyWrapper @dynamicMemberLookup public struct Attribute<Value> : Swift.Hashable, Swift.Equatable, Swift.CustomStringConvertible {
  public var identifier: AttributeGraph.AGAttribute
  public var wrappedValue: Value {
    get
    set
  }
  
  @inlinable public init(identifier: AttributeGraph.AGAttribute) {
        self.identifier = identifier
    }
  
  @inlinable public init(_ attribute: AttributeGraph.Attribute<Value>) {
        self = attribute
    }
  
  public subscript<Member>(dynamicMember keyPath: Swift.KeyPath<Value, Member>) -> AttributeGraph.Attribute<Member> {
    get
  }

  public subscript<Member>(keyPath: Swift.KeyPath<Value, Member>) -> AttributeGraph.Attribute<Member> {
    get
  }
  
  public var description: Swift.String {
    get
  }
  public static func == (lhs: AttributeGraph.Attribute<Value>, rhs: AttributeGraph.Attribute<Value>) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public protocol _AttributeBody {
  static func _destroySelf(_ value: Swift.UnsafeMutableRawPointer)
  static var _hasDestroySelf: Swift.Bool { get }
  static func _updateDefault(_ value: Swift.UnsafeMutableRawPointer)
  static var comparisonMode: AGComparisonMode { get }
}
extension AttributeGraph._AttributeBody {
  public static func _destroySelf(_ value: Swift.UnsafeMutableRawPointer)
  public static var _hasDestroySelf: Swift.Bool {
    get
  }
  public static func _updateDefault(_ value: Swift.UnsafeMutableRawPointer)
  public static var comparisonMode: AGComparisonMode { get }
}
public protocol Rule : AttributeGraph._AttributeBody {
  associatedtype Value
  static var initialValue: Self.Value? { get }
  var value: Self.Value { get }
}
extension AttributeGraph.Rule {
  public static var initialValue: Self.Value? {
    get
  }
}

// MARK: - AGCompareValues

public func compareValues<A>(_ lhs: A, _ rhs: A, mode: AGComparisonMode = ._3) -> Swift.Bool
public func compareValues<A>(_ lhs: A, _ rhs: A, options: AGComparisonOptions) -> Swift.Bool

// MARK: - AGUniqueID

@_silgen_name("AGMakeUniqueID")
public func makeUniqueID() -> AGUniqueID

// MARK: - AGTypeID

extension AGTypeID : Swift.CustomStringConvertible {
	public init(_ type: Any.Type)
	public var type: Any.Type { get }
  public var description: String { get }
  public func forEachField(
    options: AGTypeApplyOptions,
    do body: (UnsafePointer<Int8>, Int, Any.Type) -> Bool
  ) -> Bool
}

// MARK: - AGTupleType

extension AGTupleType {
  public init(_ type: [Any.Type])
  public init(_ type: Any.Type)
  public var type: Any.Type { get }
  public var isEmpty: Bool { get }
  public var indices: Range<Int> { get }
  public func type(at index: Int) -> Any.Type
}

// MARK: - AGTypeApplyFields

@_silgen_name("AGTypeApplyFields")
public func AGTypeApplyFields(
    _ type: Any.Type,
    body: (UnsafePointer<Int8>, Int, Any.Type) -> Void
)

@_silgen_name("AGTypeApplyFields2")
public func AGTypeApplyFields2(
    _ type: Any.Type,
    options: AGTypeApplyOptions,
    body: (UnsafePointer<Int8>, Int, Any.Type) -> Bool
) -> Bool

// MARK: - DebugServer C functions

@_silgen_name("AGDebugServerStart")
@inline(__always)
public func debugServerStart(_ mode: UInt) -> UnsafeRawPointer?

@_silgen_name("AGDebugServerStop")
@inline(__always)
public func debugServerStop()

@_silgen_name("AGDebugServerCopyURL")
@inline(__always)
public func debugServerCopyURL() -> CFURL?

@_silgen_name("AGDebugServerRun")
@inline(__always)
public func debugServerRun(_ timeout: Int)

// MARK: - AGGraph C functions

@_silgen_name("AGGraphArchiveJSON")
@inline(__always)
public func graphArchiveJSON(_ name: UnsafePointer<Int8>)

@_silgen_name("AGGraphCreate")
@inline(__always)
public func graphCreate() -> UnsafeRawPointer?

@_silgen_name("AGGraphCreateShared")
@inline(__always)
public func graphCreateShared(_: UnsafeRawPointer?) -> UnsafeRawPointer?

@_silgen_name("AGGraphDescription")
@inline(__always)
public func graphDescription(_ graph: UnsafeRawPointer? = nil, options: NSDictionary) -> UnsafeRawPointer?
